if service["req_fields"].length != 0
  .container.ml-2          
    h5 Required input parameters 
    form#needs-validation.mt-5(action='/webservices/execute/' + uid , method="POST", novalidate)
        if service["req_fields"].indexOf("UserID,") != -1
          .form-group.row
            label.col-sm-3.col-form-label(for='inputUserID') User Id
            .col-sm-6
              input#inputUserID.w-100.form-control(name="UserID", type='text', placeholder='', value='' , required)                            
        if service["req_fields"].indexOf("effectiveDate,") != -1
          .form-group.row
            label.col-sm-3.col-form-label(for='inputEffectiveDate') Effective Date
            .col-sm-6
              input#inputEffectiveDate.w-100.form-control(name="effectiveDate", type='text', placeholder='', value='', required) 
        if service["req_fields"].indexOf("profileIDs,") != -1
          .form-group.row
            label.col-sm-3.col-form-label(for='inputProfileIDs') Profile IDs
            .col-sm-6
              input#inputProfileIDs.w-100.form-control(name="profileIDs", type='text', placeholder='', value='', required)
        if service["req_fields"].indexOf("profileID,") != -1
          .form-group.row
            label.col-sm-3.col-form-label(for='inputprofileID') Profile ID
            .col-sm-6
              input#inputProfileID.w-100.form-control(name="profileID", type='text', placeholder='', value='', required)  
        if service["req_fields"].indexOf("profileRecordUniqueID,") != -1
          .form-group.row
            label.col-sm-3.col-form-label(for='inputprofileRecordUniqueID') Profile Record Unique ID
            .col-sm-6
              input#inputprofileRecordUniqueID.w-100.form-control(name="profileRecordUniqueID", type='text', placeholder='', value='', required) 
        if service["req_fields"].indexOf("P_MID,") != -1
          .form-group.row
            label.col-sm-3.col-form-label(for='inputP_MID') MID
            .col-sm-6
              input#inputP_MID.w-100.form-control(name="P_MID", type='text', placeholder='', value='', required)        
        if service["req_fields"].indexOf("P_OFFICE,") != -1
          .form-group.row
            label.col-sm-3.col-form-label(for='inputP_OFFICE') OFFICE
            .col-sm-6
              input#inputP_OFFICE.w-100.form-control(name="P_OFFICE", type='text', placeholder='', value='', required)
        if service["req_fields"].indexOf("P_DEPARTMENT,") != -1
          .form-group.row
            label.col-sm-3.col-form-label(for='inputP_DEPARTMENT') DEPARTMENT
            .col-sm-6
              input#inputP_DEPARTMENT.w-100.form-control(name="P_DEPARTMENT", type='text', placeholder='', value='', required)
        if service["req_fields"].indexOf("D_BUTTON_ID,") != -1
          .form-group.row
            label.col-sm-3.col-form-label(for='inputD_BUTTON_ID') BUTTON_ID
            .col-sm-6
              input#inputD_BUTTON_ID.w-100.form-control(name="D_BUTTON_ID", type='text', placeholder='', value='', required)     
        br
        .form-group.row.justify-content-center
          .col-sm-2
            button.btn.btn-primary.float-left(type='submit') Send SOAP request
          //.col-sm-2
            //a.btn.btn-link.float-right( href='/webservice/reset') Reset all