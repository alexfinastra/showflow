<?xml version="1.0" encoding="utf-8"?>
	<!--
		Created with Liquid XML Studio 1.0.8.0
		(http://www.liquid-technologies.com)
	-->
<xsd:schema xmlns:tns="http://Fundtech.com/prule-metadata-dto.xsd"
	elementFormDefault="qualified" targetNamespace="http://Fundtech.com/prule-metadata-dto.xsd"
	xmlns:xsd="http://www.w3.org/2001/XMLSchema"
>
	<xsd:element name="pruleConditions" type="tns:PRuleConditions" />
	<xsd:element name="pruleCachedResources" type="tns:PRuleCachedResources" />
	<xsd:complexType name="PRuleCachedResources">
		<xsd:sequence>
			<xsd:element minOccurs="1" maxOccurs="1" name="operators"
				type="tns:Operators" />
			<xsd:element minOccurs="1" maxOccurs="1" name="functions"
				type="tns:Functions" />
		</xsd:sequence>
	</xsd:complexType>
	<xsd:complexType name="Operators">
		<xsd:sequence>
			<xsd:element minOccurs="0" maxOccurs="unbounded" name="operator"
				type="tns:Operator" />
		</xsd:sequence>
	</xsd:complexType>
	<xsd:complexType name="Operator">
		<xsd:sequence>
			<xsd:element minOccurs="1" maxOccurs="1" name="name"
				type="xsd:string" />
		</xsd:sequence>
		<xsd:attribute name="datatype" type="xsd:string" use="required" />
		<xsd:attribute name="partOfField" type="xsd:string" use="optional" />
		<xsd:attribute name="execTypes" type="xsd:string" use="required" />
	</xsd:complexType>
	<xsd:complexType name="Functions">
		<xsd:sequence>
			<xsd:element minOccurs="0" maxOccurs="unbounded" name="function"
				type="tns:Function" />
		</xsd:sequence>
	</xsd:complexType>
	<xsd:complexType name="Function">
		<xsd:sequence>
			<xsd:element minOccurs="1" maxOccurs="1" name="name"
				type="xsd:string" />
			<xsd:element minOccurs="1" maxOccurs="1" name="description"
				type="xsd:string" />
			<xsd:element minOccurs="0" maxOccurs="1" name="inParams"
				type="tns:FunctionInParams" />
		</xsd:sequence>
		<xsd:attribute name="datatype" type="xsd:string" use="required" />
		<xsd:attribute name="execTypes" type="xsd:string" use="required" />
	</xsd:complexType>
	<xsd:complexType name="FunctionInParams">
		<xsd:sequence>
			<xsd:element minOccurs="1" maxOccurs="1" name="funcParam"
				type="tns:FunctionParam" />
		</xsd:sequence>
	</xsd:complexType>
	<xsd:complexType name="FunctionParam">
		<xsd:sequence>
			<xsd:element minOccurs="1" maxOccurs="1" name="name"
				type="xsd:string" />
		</xsd:sequence>
		<xsd:attribute name="datatype" type="xsd:string" use="required" />
	</xsd:complexType>
	<xsd:complexType name="PRuleConditions">
		<xsd:sequence>
			<xsd:element minOccurs="0" maxOccurs="unbounded" name="cond"
				type="tns:Cond" />
		</xsd:sequence>
	</xsd:complexType>
	<xsd:complexType name="Cond">
		<xsd:sequence>
			<xsd:element minOccurs="0" maxOccurs="1" name="andOr"
				type="tns:AndOr" />
			<xsd:element minOccurs="0" maxOccurs="1" name="openBr"
				type="tns:OpenBr" />
			<xsd:element minOccurs="0" maxOccurs="1" name="leftVal"
				type="tns:Operand" />
			<xsd:element minOccurs="0" maxOccurs="1" name="op"
				type="xsd:string" />
			<xsd:element minOccurs="0" maxOccurs="1" name="rightVal"
				type="tns:Operand" />
			<xsd:element minOccurs="0" maxOccurs="1" name="closeBr"
				type="tns:CloseBr" />
		</xsd:sequence>
		<xsd:attribute name="lineNumber" type="xsd:int" use="optional" />
	</xsd:complexType>
	<xsd:simpleType name="AndOr">
		<xsd:restriction base="xsd:string">
			<xsd:enumeration value="AND" />
			<xsd:enumeration value="OR" />
		</xsd:restriction>
	</xsd:simpleType>
	<xsd:simpleType name="OpenBr">
		<xsd:restriction base="xsd:string">
			<xsd:pattern value="\(*" />
		</xsd:restriction>
	</xsd:simpleType>
	<xsd:simpleType name="CloseBr">
		<xsd:restriction base="xsd:string">
			<xsd:pattern value="\)*" />
		</xsd:restriction>
	</xsd:simpleType>
	<xsd:complexType name="Operand">
		<xsd:simpleContent> 
			<xsd:extension base="xsd:string">
				<xsd:attribute name="CT" type="tns:OperandContentType" use="required" />
			<xsd:attribute name="value" type="xsd:string" use="optional" />
			</xsd:extension>
		</xsd:simpleContent>
	</xsd:complexType>
	<xsd:simpleType name="OperandContentType">
		<xsd:restriction base="xsd:string">
			<xsd:enumeration value="Field" />
			<xsd:enumeration value="Function" />
			<xsd:enumeration value="Value" />
			<xsd:enumeration value="InList" />
			<xsd:enumeration value="InValueList" />
			<xsd:enumeration value="Between" />
		</xsd:restriction>
	</xsd:simpleType>
</xsd:schema>